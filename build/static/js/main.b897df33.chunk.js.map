{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["baseURL","getUniswapPairs","a","first","orderBy","orderDirection","createdAtTimestampGt","moment","unix","createdAtBlockNumber","query","axios","post","res","data","pairs","getUniswapPairDayDatas","dateGt","pairAddressIn","dailyVolumeUSDGt","JSON","stringify","pairDayDatas","setLoading","setPairs","map","pair","id","datas","columns","title","dataIndex","key","render","text","address","split","target","rel","href","symbol","responsive","align","numeral","format","App","now","useState","setFirst","setOrderBy","setOrderDirection","setDailyVolumeUSDGt","setCreatedAtTimestampGt","setCreatedAtBlockNumber","loading","useEffect","loadData","style","width","value","onChange","e","options","label","marginTop","size","pagination","pageSize","dataSource","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b897df33.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport numeral from \"numeral\";\nimport { Table, Input, DatePicker, Select } from \"antd\";\n\nconst baseURL = \"https://api.thegraph.com/subgraphs/name/ianlapham/uniswapv2\";\n\nasync function getUniswapPairs({\n  first = 1000,\n  orderBy = \"createdAtTimestamp\",\n  orderDirection = \"desc\",\n  createdAtTimestampGt = moment().unix() - 72 * 3600,\n  createdAtBlockNumber = null,\n} = {}) {\n  const query = `\n    {\n      pairs(\n        first: ${first},\n        orderBy: ${orderBy},\n        orderDirection: ${orderDirection},\n        where: {\n          createdAtTimestamp_gt: ${createdAtTimestampGt},\n          ${createdAtBlockNumber ? `createdAtBlockNumber: ${createdAtBlockNumber}` : ''}\n        }\n      ){\n        id\n        token0{\n          id\n          symbol\n          name\n          decimals\n          totalSupply\n          tradeVolume\n          tradeVolumeUSD\n          untrackedVolumeUSD\n          txCount\n          totalLiquidity\n          derivedETH\n        }\n        token1{\n          id\n          symbol\n          name\n          decimals\n          totalSupply\n          tradeVolume\n          tradeVolumeUSD\n          untrackedVolumeUSD\n          txCount\n          totalLiquidity\n          derivedETH\n        }\n        createdAtTimestamp\n        createdAtBlockNumber\n      }\n    }\n  `;\n  const res = await axios.post(baseURL, { query });\n  return res.data.data.pairs;\n}\n\nasync function getUniswapPairDayDatas({\n  first = 1000,\n  orderBy = \"dailyVolumeUSD\",\n  orderDirection = \"desc\",\n  dateGt = moment().unix() - 24 * 3600,\n  pairAddressIn = [],\n  dailyVolumeUSDGt = 1000,\n} = {}) {\n  const query = `\n    {\n      pairDayDatas(\n        first: ${first},\n        orderBy: ${orderBy},\n        orderDirection: ${orderDirection} ,\n        where: {\n          date_gt: ${dateGt},\n          pairAddress_in: ${JSON.stringify(pairAddressIn)},\n          dailyVolumeUSD_gt: ${dailyVolumeUSDGt},\n        }\n      ){\n        token0{\n          id\n          symbol\n          name\n          decimals\n          totalSupply\n          tradeVolume\n          tradeVolumeUSD\n          untrackedVolumeUSD\n          txCount\n          totalLiquidity\n          derivedETH\n        }\n        token1{\n          id\n          symbol\n          name\n          decimals\n          totalSupply\n          tradeVolume\n          tradeVolumeUSD\n          untrackedVolumeUSD\n          txCount\n          totalLiquidity\n          derivedETH\n        }\n        dailyVolumeUSD\n        id\n        pairAddress\n        dailyVolumeToken0\n        dailyVolumeToken1\n        date\n      }\n    }\n  `;\n  const res = await axios.post(baseURL, { query });\n  return res.data.data.pairDayDatas;\n}\n\nasync function loadData(setLoading, setPairs, {\n  first,\n  orderBy,\n  orderDirection,\n  dailyVolumeUSDGt,\n  createdAtTimestampGt,\n}) {\n  setLoading(true);\n  const pairs = await getUniswapPairs({\n    first,\n    // orderBy,\n    orderDirection,\n    createdAtTimestampGt,\n  });\n  const datas = await getUniswapPairDayDatas({\n    first,\n    orderBy,\n    orderDirection,\n    dateGt: moment().unix() - 24 * 3600,\n    pairAddressIn: pairs.map(pair => pair.id),\n    dailyVolumeUSDGt,\n  });\n  setPairs(datas);\n  setLoading(false);\n}\n\nconst columns = [\n  {\n    title: 'ID',\n    dataIndex: 'id',\n    key: 'id',\n    render: (text) => {\n      const address = text.split(\"-\")[0]\n      return <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.dextools.io/app/uniswap/pair-explorer/${address}`}>{text}</a>\n    }\n  },\n  {\n    title: 'Token0',\n    dataIndex: 'token0',\n    key: 'token0',\n    render: (text) => {\n      return <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://etherscan.io/token/${text.id}`}>{text.symbol}</a>;\n    }\n  },\n  {\n    title: 'Token1',\n    dataIndex: \"token1\",\n    key: \"token1\",\n    render: (text) => {\n      return <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://etherscan.io/token/${text.id}`}>{text.symbol}</a>;\n    }\n  },\n  {\n    title: 'dailyVolumeToken0',\n    dataIndex: 'dailyVolumeToken0',\n    key: 'dailyVolumeToken0',\n  },\n  {\n    title: 'dailyVolumeToken1',\n    dataIndex: 'dailyVolumeToken1',\n    key: 'dailyVolumeToken1',\n  },\n  {\n    title: 'dailyVolumeUSD',\n    dataIndex: 'dailyVolumeUSD',\n    key: 'dailyVolumeUSD',\n    responsive: ['md'],\n    align: 'right',\n    render: (text) => {\n      return numeral(text).format(\"$ 0,0.0\");\n    }\n  },\n];\n\nexport default function App()  {\n  const now = moment().unix();\n  const [pairs, setPairs] = useState([]);\n  const [first, setFirst] = useState(1000);\n  const [orderBy, setOrderBy] = useState(\"dailyVolumeUSD\");\n  const [orderDirection, setOrderDirection] = useState(\"desc\");\n  const [dailyVolumeUSDGt, setDailyVolumeUSDGt] = useState(1000);\n  const [createdAtTimestampGt, setCreatedAtTimestampGt] = useState(now - 72 * 3600);\n  const [createdAtBlockNumber, setCreatedAtBlockNumber] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    loadData(setLoading, setPairs, {\n      first,\n      orderBy,\n      orderDirection,\n      dailyVolumeUSDGt,\n      createdAtTimestampGt,\n    });\n  }, [first, orderBy, orderDirection, dailyVolumeUSDGt, createdAtTimestampGt]);\n\n  return (\n    <>\n      <h3> Uniswap Pair Trading </h3>\n      <table>\n        <tbody>\n          <tr>\n            <td>First</td>\n            <td>\n              <Input style={{ width: 200 }} value={first} onChange={ e => setFirst(e.target.value)} />\n            </td>\n          </tr>\n          <tr>\n            <td>OrderBy</td>\n            <td>\n              <Select\n                value={orderBy}\n                options={[\n                  { label: \"dailyVolumeUSD\", value: \"dailyVolumeUSD\" },\n                  { label: \"dailyVolumeToken0\", value: \"dailyVolumeToken0\" },\n                  { label: \"dailyVolumeToken1\", value: \"dailyVolumeToken1\" },\n                ]}\n                onChange={value => setOrderBy(value)}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>\n              OrderDirection\n            </td>\n            <td>\n              <Select\n                value={orderDirection}\n                options={[\n                  { label: \"Desc\", value: \"desc\" },\n                  { label: \"Asc\", value: \"asc\" },\n                ]}\n                onChange={value => setOrderDirection(value)}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>Creaeted After</td>\n            <td>\n              <DatePicker\n                value={moment.unix(createdAtTimestampGt)}\n                onChange={value => {\n                  setCreatedAtTimestampGt(value.unix());\n                }}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>Daily Volume More Then</td>\n            <td><Input value={dailyVolumeUSDGt} onChange={e => setDailyVolumeUSDGt(e.target.value)} /></td>\n          </tr>\n          <tr>\n            <td>Creaeted At Block Number</td>\n            <td>\n              <Input\n                value={createdAtBlockNumber}\n                onChange={e => {\n                  setCreatedAtBlockNumber(e.target.value);\n                }}\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <Table\n        style={{ marginTop: 8 }}\n        loading={loading}\n        size=\"small\"\n        pagination={{\n          pageSize: 100,\n        }}\n        columns={columns}\n        dataSource={pairs.map(pair => ({ ...pair, key: pair.id }))}\n      />\n      </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}